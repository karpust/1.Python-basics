# """1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе."""
# lst = [2.12, 5, True, None, "grumgrum", set(), {"a": 5}, (1,)]
# for el in lst:
#     print(f"The element {el} belong to the {type(el)}")


# """2. Для списка реализовать обмен значений соседних элементов,
# т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input()."""
# list_of_data = []
# element = input("Enter data: ")
#
# while element:
#     list_of_data.append(element)
#     element = input("Enter data: ")
#
# for i in range(0, len(list_of_data)-1, 2):
#     list_of_data[i], list_of_data[i+1] = list_of_data[i+1], list_of_data[i]
# print(list_of_data)


# """3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict."""
#
# month = int(input("Enter the month number: "))
# dict_seasons = {"Winter": (12, 1, 2), "Spring": (3, 4, 5), "Summer": (6, 7, 8), "Autumn": (9, 10, 11)}
# for k, v in dict_seasons.items():
#     if month in v:
#         print(k)

# month = int(input("Enter the month number: "))
# seasons = [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
# for i in range(len(seasons)):
#     if seasons[i] == month:
#         if i < 3:
#             print("Winter")
#         elif 2 < i < 6:
#             print("Spring")
#         elif 5 < i < 9:
#             print("Summer")
#         else:
#             print("Autumn")


# """4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если слово длинное, выводить только первые 10 букв в слове."""
#
# inp_string = input("Enter space-separated data: ")
# inp_list = inp_string.split(" ")
# for i in range(len(inp_list)):
#     print("%d. %.10s" % (i+1, inp_list[i]))


# """5. Реализовать структуру «Рейтинг», представляющую собой
# не возрастающий набор натуральных чисел. У пользователя необходимо
# запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы
# с одинаковыми значениями, то новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2]."""
#
# rat_list = [7, 5, 3, 3, 2]
# new_pos = int(input("Enter new position: "))
# for i in range(len(rat_list)-1):
#     if rat_list[i+1] <= new_pos < rat_list[i]:
#         rat_list.insert(i + 1, new_pos)
# print(rat_list)

"""6. * Реализовать структуру данных «Товары». Она должна представлять собой
список кортежей. Каждый кортеж хранит информацию об отдельном товаре.
В кортеже должно быть два элемента — номер товара и словарь с параметрами
(характеристиками товара: название, цена, количество, единица измерения).
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
Пример готовой структуры:
[

(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})

]
Необходимо собрать аналитику о товарах. Реализовать словарь, в котором
каждый ключ — характеристика товара, например название, а значение — список
значений-характеристик, например список названий товаров.
Пример:
{

“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]

}"""